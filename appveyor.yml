image:
  - Visual Studio 2019
environment:
  matrix:
    - PYTHON: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9.x"
      PYTHON_ARCH: "64"
init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  - "%PYTHON%\\python -m pip install --upgrade pip"
  - "%PYTHON%\\Scripts\\pip install pymyinstall"
  # - "%PYTHON%\\Scripts\\pymy_install3 --set=pyquickhelper"
  - "%PYTHON%\\Scripts\\pip install numpy scipy"
  - "%PYTHON%\\Scripts\\pymy_install3 pandas matplotlib shapely pyproj cffi cairocffi memory_profiler"
  - "%PYTHON%\\Scripts\\pip install pyquickhelper jyquickhelper"
  - "%PYTHON%\\Scripts\\pip install ggplot version_information pivottablejs"
  - "%PYTHON%\\Scripts\\pip install spyder"
  - "%PYTHON%\\Scripts\\pip install joblib"
  - "%PYTHON%\\Scripts\\pip install memory_profiler!=0.48.0"
#  check the status of rodeo
  - "%PYTHON%\\Scripts\\pip uninstall -y pymyinstall"
  - "%PYTHON%\\Scripts\\pip install -r requirements.txt"
  - set PYTHONPATH=src

build: off

test_script:
  - "%PYTHON%\\python -u setup.py build_script"
  - "%PYTHON%\\python -u setup.py unittests"

after_test:
  - "%PYTHON%\\python -u setup.py bdist_wheel"

artifacts:
  - path: dist
    name: pymyinstall

cache:
  # Use the appveyor cache to avoid re-downloading large archives such
  # the MKL numpy and scipy wheels mirrored on a rackspace cloud
  # container, speed up the appveyor jobs and reduce bandwidth.
  # Tips taken from scikit-learn.
  - '%APPDATA%\pip\Cache'
