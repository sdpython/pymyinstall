language: python
python:
  - { PATH: "{{replace(Python36, '\\', '\\\\')}}", VERSION: 3.6, DIST: std }
  - { PATH: "{{replace(Python27, '\\', '\\\\')}}", VERSION: 2.7, DIST: std }
  - { PATH: "{{replace(Anaconda3, '\\', '\\\\')}}", VERSION: 3.6, DIST: conda }
virtualenv:
  - path: {{ospathjoin(root_path, pickname("%NAME_JENKINS%", project_name + "_%VERSION%_%DIST%_%NAME%"), "_venv")}}
install:
  - pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ jyquickhelper --extra-index-url=https://pypi.python.org/simple/
  - pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ pyquickhelper --extra-index-url=https://pypi.python.org/simple/
  - pip install -r requirements.txt
  - pip freeze
  - pip freeze > pip_freeze.txt
before_script:
  - if [ ${VERSION} == "2.7" ] then {{Python36pyq}}\python -u setup.py copy27 fi
  - if [ ${VERSION} == "2.7" ] then cd dist_module27 fi
  - if [ ${VERSION} == "2.7" ] then pip install backports.shutil_get_terminal_size fi
script:
  - { CMD: "python -u setup.py unittests", NAME: "UT" }
  - { CMD: "python -u setup.py unittests_LONG", NAME: "UT_LONG" }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*base.*\" -g \".*datascientist.*\"", NAME: "UT_SKIP_BASE" }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*sqlitespy.*\"", NAME: "UT_SKIP_SQLLITE" }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*pywin32.*\"", NAME: "UT_SKIP_PYWIN32" }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*minimal.*\"", NAME: "UT_SKIP_MINIMAL" }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*pyquickhelper.*\"", NAME: "UT_SKIP_PYQUICKHELPER" }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*pyensae.*\"", NAME: "UT_SKIP_PYENSAE", TIMEOUT: 3600 }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*teaching.*\"", NAME: "UT_SKIP_TEACHING", TIMEOUT: 7200 }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*datascientist.*\"", NAME: "UT_SKIP_DATASCIENTIST", TIMEOUT: 7200 }
  - { CMD: "python -u setup.py unittests -e \".*SKIP.*every.*\"", NAME: "UT_SKIP_ALL", TIMEOUT: 20000 }
after_script:
  - python setup.py bdist_wheel
  - if [ ${VERSION} == "2.7" and ${DIST} != "conda" ] then copy dist\*.whl {{root_path}}\..\..\local_pypi\local_pypi_server fi
  - if [ ${VERSION} == "2.7" ] then cd .. fi
  - if [ ${VERSION} != "2.7" and ${DIST} != "conda" and ${VERSION} == "3.6" and ${NAME} == "UT" ] then copy dist\*.whl {{root_path}}\..\..\local_pypi\local_pypi_server fi
documentation:
  - if [ ${NAME} == "UT" and ${VERSION} != "2.7" ] then python -u setup.py build_sphinx fi
  - if [ ${NAME} == "UT" and ${VERSION} != "2.7" ] then xcopy /E /C /I /Y _doc\sphinxdoc\build\html dist\html fi
